# ------------------------------------------------------------
# 01 Building with Maven – CI policy
# • Build every push to any branch.
# • Build every PR opened → master.
# • (Nice-to-have) run once on fork.
# • Collapse duplicate runs with concurrency.
# ------------------------------------------------------------

name: 01 Building with Maven

# Event matrix
on:

  # 1️⃣ Build every commit, everywhere.
  push:
    branches:
      - '**'            # matches "master", "feature/foo", "release/1.2", …

  # 2️⃣ Build any PR that targets master.
  pull_request:
    branches:
      - master
    types: [opened, synchronize, reopened]

  # 3️⃣ Optional: run once when someone forks the repo.
  fork:

# Prevent two identical jobs at once
concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  helper:
    uses: ./.github/workflows/migration-helper01.yml
  build:
    runs-on: ubuntu-latest
    needs: helper
    # strategy:
    #   matrix:
    #     os:
    #       - ubuntu-latest
    # runs-on: '${{ matrix.os }}'
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0           # full history for changelogs / tags

      - name: Extracting metadata from a cloned repository
        id: get-cloned
        run: |
          echo "SHA=$(git log -1 --format='%h')" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto
          cache: maven

      - name: Building with Maven
        env:
          MAVEN_CLI_OPTS: '--batch-mode'
          NEXUS_DEPLOYER: ${{ secrets.NEXUS_DEPLOYER }}
          NEXUS_DEPLOYER_PASS: ${{ secrets.NEXUS_DEPLOYER_PASS }}
          IMAGE_TAG: ${{ format('{0}.{1}.{2}', github.ref_name, steps.get-cloned.outputs.SHA, github.run_attempt) }}
        run: |-
          set -e

          # sanitize IMAGE_TAG for jib-compatible docker tagging
          IMAGE_TAG="$(echo "$IMAGE_TAG" | tr '/\\,' '--')"

          echo '${{ secrets.NEXUS_DEPLOYER_PASS }}' | docker login nexus.kontur.io:8084 -u '${{ secrets.NEXUS_DEPLOYER }}' --password-stdin
          echo '${{ secrets.NEXUS_DEPLOYER_PASS }}' | docker login nexus.kontur.io:8085 -u '${{ secrets.NEXUS_DEPLOYER }}' --password-stdin

          IMAGE_TAG="$IMAGE_TAG" mvn -T 1C $MAVEN_CLI_OPTS clean install jib:build -U -Prelease
          echo "<h3>Docker image tag</h3> $IMAGE_TAG <br><br>" >> $GITHUB_STEP_SUMMARY
          mv -v target/*.zip .

      - name: Uploading build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: 'event-api-${{needs.helper.outputs.CI_COMMIT_REF_SLUG}}'
          path: '*.zip'
          retention-days: 10

      - name: Publishing JUnit Test result report
        uses: konturio/action-junit-report@v3
        if: always()
        with:
          report_paths: target/*-reports/*.xml
          retention-days: 10

      - name: Uploading coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: target/site/jacoco/jacoco.xml
